nextflow_workflow {

    name "Test Integration PREPARE_GENOME + STAR_ALIGN"
    script "../../../../subworkflows/local/prepare_genome/main.nf"
    workflow "PREPARE_GENOME"

    tag "integration"
    tag "star_align"
    tag "prepare_genome"

    test("prepare_genome_star_align_integration") {

        when {
            workflow {
                """
                input[0] = file('https://ngi-igenomes.s3.eu-west-1.amazonaws.com/testdata/nf-core/modules/genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                input[1] = file('https://ngi-igenomes.s3.eu-west-1.amazonaws.com/testdata/nf-core/modules/genomics/homo_sapiens/genome/genome.gtf', checkIfExists: true)
                input[2] = null // no additional_fasta
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.out.fasta },
                { assert workflow.out.gtf },
                { assert workflow.out.index },
                { assert workflow.out.versions },
                { assert path(workflow.out.index.get(0)).exists() },
                { assert path(workflow.out.index.get(0)).isDirectory() }
            )
        }
    }

    test("prepare_genome_integration - stub") {

        options "-stub"

        when {
            workflow {
                """
                input[0] = file('https://ngi-igenomes.s3.eu-west-1.amazonaws.com/testdata/nf-core/modules/genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                input[1] = file('https://ngi-igenomes.s3.eu-west-1.amazonaws.com/testdata/nf-core/modules/genomics/homo_sapiens/genome/genome.gtf', checkIfExists: true)
                input[2] = null // no additional_fasta
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert workflow.out.fasta },
                { assert workflow.out.gtf },
                { assert workflow.out.index },
                { assert workflow.out.versions }
            )
        }
    }
}
