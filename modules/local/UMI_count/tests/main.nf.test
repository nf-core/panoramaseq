nextflow_process {

    name "Test Process UMI_count"
    script "../main.nf"
    process "UMI_count"
    config "./nextflow.config"
    tag "modules"
    tag "modules_local"
    tag "umi_count"

    test("panoramaseq [bam] - S09") {

        when {
            params {
                outdir   = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id:'S09', N_barcodes:34500, sample_size:10000, len_barcode:36, Nthresh:9, Ntriage:1000 ], // meta map
                    file('https://raw.githubusercontent.com/francops1722/test-datasets/panoramaseq/testdata/samtools/S09.assigned_sorted.bam', checkIfExists: true),
                    file('https://raw.githubusercontent.com/francops1722/test-datasets/panoramaseq/testdata/samtools/S09.assigned_sorted.bam.bai', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("panoramaseq [bam] - S10") {

        when {
            params {
                outdir   = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id:'S10', N_barcodes:34500, sample_size:10000, len_barcode:36, Nthresh:9, Ntriage:1000 ], // meta map
                    file('https://raw.githubusercontent.com/francops1722/test-datasets/panoramaseq/testdata/samtools/S10.assigned_sorted.bam', checkIfExists: true),
                    file('https://raw.githubusercontent.com/francops1722/test-datasets/panoramaseq/testdata/samtools/S10.assigned_sorted.bam.bai', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("panoramaseq [bam] - S09 - stub") {

        options "-stub"

        when {
            params {
                outdir   = "$outputDir"
            }
            process {
                """
                input[0] = [
                    [ id:'S09', N_barcodes:34500, sample_size:10000, len_barcode:36, Nthresh:9, Ntriage:1000 ], // meta map
                    file('https://raw.githubusercontent.com/francops1722/test-datasets/panoramaseq/testdata/samtools/S09.assigned_sorted.bam', checkIfExists: true),
                    file('https://raw.githubusercontent.com/francops1722/test-datasets/panoramaseq/testdata/samtools/S09.assigned_sorted.bam.bai', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
